<div class="card-container">
	@foreach (var menuItem in MenuItems)
	{
		// pass the menuItem instance to the delete handler:
		<MenuItem menuItem="@menuItem" OnDelete="@EventCallback.Factory.Create(this, () => OnDeleteMenuItem(menuItem))" />
	}
	@if (MenuItems.Count > 0)
	{
		<div class="card add-card-button" @onclick="HandleOnClickAddItem">
			<img src="./assets/icon.svg" width="50" alt="">
		</div>
	}
</div>

@code {
    [Parameter]
	public required List<Models.MenuItem> MenuItems { get; set; }
	
	[Parameter]
	public EventCallback OnClickAddItem { get; set; }

	private void OnDeleteMenuItem(Models.MenuItem menuItem)
	{
		MenuItems = MenuItems.Where(m => m.Id != menuItem.Id).ToList();
	}

	private async Task HandleOnClickAddItem()
	{
		if (OnClickAddItem.HasDelegate)
		{
			await OnClickAddItem.InvokeAsync();
		}
	}
}
